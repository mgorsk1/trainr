version: '3'

services:
  backend:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile.backend
    networks:
      - trainr-network
    env_file:
      - .env
    volumes:
      - trainr-backend-db:/app/db
    ports:
      - 8080:8080
    healthcheck:
      test: curl --fail http://localhost:8080/api/v1/health || exit 1
      interval: 60s
      retries: 5
      start_period: 10s
      timeout: 10s
    depends_on:
      - influxdb

  frontend:
    container_name: frontend
    build:
      context: .
      dockerfile: Dockerfile.frontend
    networks:
      - trainr-network
    env_file:
      - .env
    ports:
      - 3000:3000
      - 8000:8000
    depends_on:
      - backend
    healthcheck:
      test: curl --fail http://localhost:8000/ping || exit 1
      interval: 60s
      retries: 5
      start_period: 180s
      timeout: 10s

  publisher:
    container_name: publisher
    build:
      context: .
      dockerfile: Dockerfile.ant
    networks:
      - trainr-network
    depends_on:
      - backend
    environment:
      ANT__BACKEND_API_URL: http://backend:8080

  influxdb:
    image: influxdb:latest
    container_name: influxdb
    networks:
      - trainr-network
    security_opt:
      - no-new-privileges:true
    restart: unless-stopped
    ports:
      - 8086:8086

  influxdbSetup:
    image: influxdb:latest
    container_name: influxdb-setup
    networks:
      - trainr-network
    depends_on:
      - influxdb
    env_file:
      - .env
    command: [
      'setup',
      '--host', '$BACKEND__INFLUXDB_HOST',
      '--org', '$BACKEND__INFLUXDB_ORG',
      '--bucket' ,'$BACKEND__INFLUXDB_BUCKET',
      '--username' , '$BACKEND__INFLUXDB_USER',
      '--password', '$BACKEND__INFLUXDB_PASSWORD',
      '--retention', '4h',
      '--force'
    ]
    entrypoint: [ 'influx' ]

networks:
  trainr-network:

volumes:
  trainr-backend-db:
    driver: local

